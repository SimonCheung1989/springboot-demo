/**
 * NOTE: This class is auto generated by the swagger code generator program (unset).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.simon.demo.profileservice.api;

import com.simon.demo.profileservice.model.ProfileDTO;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-04-26T22:18:54.479+08:00")

@Api(value = "profile", description = "the profile API")
public interface ProfileApi {

    @ApiOperation(value = "get profile", nickname = "profileGet", notes = "get profile", response = ProfileDTO.class, responseContainer = "List", tags={ "Profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ProfileDTO.class, responseContainer = "List") })
    @RequestMapping(value = "/profile",
        method = RequestMethod.GET)
    ResponseEntity<List<ProfileDTO>> profileGet();


    @ApiOperation(value = "get profile by id", nickname = "profileIdGet", notes = "get profile by id", response = ProfileDTO.class, tags={ "Profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ProfileDTO.class) })
    @RequestMapping(value = "/profile/{id}",
        method = RequestMethod.GET)
    ResponseEntity<ProfileDTO> profileIdGet(@ApiParam(value = "",required=true) @PathVariable("id") String id);


    @ApiOperation(value = "post profile", nickname = "profilePost", notes = "post profile", response = ProfileDTO.class, tags={ "Profile", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = ProfileDTO.class) })
    @RequestMapping(value = "/profile",
        method = RequestMethod.POST)
    ResponseEntity<ProfileDTO> profilePost(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ProfileDTO profileDTO);

}
